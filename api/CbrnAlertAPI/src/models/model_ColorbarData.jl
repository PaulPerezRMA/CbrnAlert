# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""
    ColorbarData(;
        colors=nothing,
        ticks=nothing,
    )

    - colors::Vector{String} : Colors for each interval in hex format
    - ticks::Vector{Float64} : Values for the bounding intervals
"""
Base.@kwdef mutable struct ColorbarData <: OpenAPI.APIModel
    colors::Union{Nothing, Vector{String}} = nothing
    ticks::Union{Nothing, Vector{Float64}} = nothing

    function ColorbarData(colors, ticks, )
        OpenAPI.validate_property(ColorbarData, Symbol("colors"), colors)
        OpenAPI.validate_property(ColorbarData, Symbol("ticks"), ticks)
        return new(colors, ticks, )
    end
end # type ColorbarData

const _property_types_ColorbarData = Dict{Symbol,String}(Symbol("colors")=>"Vector{String}", Symbol("ticks")=>"Vector{Float64}", )
OpenAPI.property_type(::Type{ ColorbarData }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_ColorbarData[name]))}

function check_required(o::ColorbarData)
    o.ticks === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ ColorbarData }, name::Symbol, val)
end
