# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""
    GeoCellAllOf(;
        geometry=nothing,
        properties=nothing,
    )

    - geometry::Polygon
    - properties::GeoCellAllOfProperties
"""
Base.@kwdef mutable struct GeoCellAllOf <: OpenAPI.APIModel
    geometry = nothing # spec type: Union{ Nothing, Polygon }
    properties = nothing # spec type: Union{ Nothing, GeoCellAllOfProperties }

    function GeoCellAllOf(geometry, properties, )
        OpenAPI.validate_property(GeoCellAllOf, Symbol("geometry"), geometry)
        OpenAPI.validate_property(GeoCellAllOf, Symbol("properties"), properties)
        return new(geometry, properties, )
    end
end # type GeoCellAllOf

const _property_types_GeoCellAllOf = Dict{Symbol,String}(Symbol("geometry")=>"Polygon", Symbol("properties")=>"GeoCellAllOfProperties", )
OpenAPI.property_type(::Type{ GeoCellAllOf }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_GeoCellAllOf[name]))}

function check_required(o::GeoCellAllOf)
    true
end

function OpenAPI.validate_property(::Type{ GeoCellAllOf }, name::Symbol, val)
end
