# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""
    FeatureCollectionAllOf(;
        features=nothing,
    )

    - features::Vector{Feature}
"""
Base.@kwdef mutable struct FeatureCollectionAllOf <: OpenAPI.APIModel
    features::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{Feature} }

    function FeatureCollectionAllOf(features, )
        OpenAPI.validate_property(FeatureCollectionAllOf, Symbol("features"), features)
        return new(features, )
    end
end # type FeatureCollectionAllOf

const _property_types_FeatureCollectionAllOf = Dict{Symbol,String}(Symbol("features")=>"Vector{Feature}", )
OpenAPI.property_type(::Type{ FeatureCollectionAllOf }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_FeatureCollectionAllOf[name]))}

function check_required(o::FeatureCollectionAllOf)
    o.features === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ FeatureCollectionAllOf }, name::Symbol, val)
end
