# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""
    PolygonAllOf(;
        coordinates=nothing,
    )

    - coordinates::Vector{Vector}
"""
Base.@kwdef mutable struct PolygonAllOf <: OpenAPI.APIModel
    coordinates::Union{Nothing, Vector{Vector}} = nothing

    function PolygonAllOf(coordinates, )
        OpenAPI.validate_property(PolygonAllOf, Symbol("coordinates"), coordinates)
        return new(coordinates, )
    end
end # type PolygonAllOf

const _property_types_PolygonAllOf = Dict{Symbol,String}(Symbol("coordinates")=>"Vector{Vector}", )
OpenAPI.property_type(::Type{ PolygonAllOf }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_PolygonAllOf[name]))}

function check_required(o::PolygonAllOf)
    o.coordinates === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ PolygonAllOf }, name::Symbol, val)
end
