# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""
    FlexpartReleaseSimple(;
        location=nothing,
        start=nothing,
        var"end"=nothing,
        height=50.0,
        mass=1000,
        particles=nothing,
    )

    - location::GeoPoint
    - start::ZonedDateTime
    - var"end"::ZonedDateTime
    - height::Float64
    - mass::Float64
    - particles::Float64
"""
Base.@kwdef mutable struct FlexpartReleaseSimple <: OpenAPI.APIModel
    location = nothing # spec type: Union{ Nothing, GeoPoint }
    start::Union{Nothing, ZonedDateTime} = nothing
    var"end"::Union{Nothing, ZonedDateTime} = nothing
    height::Union{Nothing, Float64} = 50.0
    mass::Union{Nothing, Float64} = 1000
    particles::Union{Nothing, Float64} = nothing

    function FlexpartReleaseSimple(location, start, var"end", height, mass, particles, )
        OpenAPI.validate_property(FlexpartReleaseSimple, Symbol("location"), location)
        OpenAPI.validate_property(FlexpartReleaseSimple, Symbol("start"), start)
        OpenAPI.validate_property(FlexpartReleaseSimple, Symbol("end"), var"end")
        OpenAPI.validate_property(FlexpartReleaseSimple, Symbol("height"), height)
        OpenAPI.validate_property(FlexpartReleaseSimple, Symbol("mass"), mass)
        OpenAPI.validate_property(FlexpartReleaseSimple, Symbol("particles"), particles)
        return new(location, start, var"end", height, mass, particles, )
    end
end # type FlexpartReleaseSimple

const _property_types_FlexpartReleaseSimple = Dict{Symbol,String}(Symbol("location")=>"GeoPoint", Symbol("start")=>"ZonedDateTime", Symbol("end")=>"ZonedDateTime", Symbol("height")=>"Float64", Symbol("mass")=>"Float64", Symbol("particles")=>"Float64", )
OpenAPI.property_type(::Type{ FlexpartReleaseSimple }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_FlexpartReleaseSimple[name]))}

function check_required(o::FlexpartReleaseSimple)
    o.location === nothing && (return false)
    o.start === nothing && (return false)
    o.var"end" === nothing && (return false)
    o.height === nothing && (return false)
    o.mass === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ FlexpartReleaseSimple }, name::Symbol, val)
    if name === Symbol("start")
        OpenAPI.validate_param(name, "FlexpartReleaseSimple", :format, val, "date-time")
    end
    if name === Symbol("end")
        OpenAPI.validate_param(name, "FlexpartReleaseSimple", :format, val, "date-time")
    end
end
